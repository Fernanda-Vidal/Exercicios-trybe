// Operadores de Comparação
// 1
use('new')
db.restaurants.find()

// 2
use('new')
db.restaurants.countDocuments({ borough: { $in: ['Queens', 'Staten Island', 'Bronx'] } })

// 3
use('new')
db.restaurants.countDocuments({ cuisine: { $ne: 'American' } })

// 4
use('new')
db.restaurants.countDocuments({ rating: { $gte: 8 }})

// 5
use('new')
db.restaurants.countDocuments({ rating: { $lt: 4 } })

// 6
use('new')
db.restaurants.countDocuments({ rating: { $nin: [5, 6, 7] } })

// Operadores Lógicos
// 1
use('new')
db.restaurants.countDocuments({ rating: { $not: { $lte: 5 } } })

// 2
use('new')
db.restaurants.countDocuments({ $or: [
    { rating: { $gte: 6 } },
    { borough: 'Brooklyn' }
    ] })

// 3
use('new')
db.restaurants.countDocuments({ $and: [
    { borough: { $in: ['Queens', 'Staten Island', 'Brooklyn'] } },
    { rating: { $gt: 4 } }
] })

// 4
use('new')
db.restaurants.countDocuments({ $nor: [
    { rating: 1 },
    { cuisine: 'American' }
] })

// 5
use('new')
db.restaurants.countDocuments({ $and: [
    { $or: [{ rating: { $gt: 6, $lt: 10 } }] },
    { $or: [{ borough: 'Brooklyn' }, { cuisine: { $ne: 'Delicatessen' } }] }
] })

// Método sort
// 1
use('new')
db.restaurants.find().sort({ 'name': 1 })

use('new')
db.restaurants.find().sort({ rating: -1 })

// Remover
// 1
use('new')
db.restaurants.deleteOne({ cuisine: 'Ice Cream, Gelato, Yogurt, Ices' })

use('new')
db.restaurants.deleteMany({ cuisine: 'American' })